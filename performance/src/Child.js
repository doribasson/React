import React from "react";
const Child = ({ str, array, obj }) => {
  //   let childNumber = 0;
  //   for (let i = 0; i < 800_000_000; i++) {
  //     childNumber++;
  //   }

  //אחרי כל לחיצה על המינוס אנחנו נראה שיקח לו זמן בגלל הפור עד שמחזיר תשובה אבל כשעישנו אותו דבר עם יוזקולבק ולחצנו על מינוס אז בפעם הראשונה רק שהוא מייצר יקח לו זמן וכל לחיצה נוספת תהיה מהירה בגלל שהוא עושה את זה רק בפעם הראשונה.. נוכל לשים בדפנדסי ערך ואז הוא ישמור את הערך ורק אם הערך השתנה אז הוא יבצע שוב את הפונקציה הזאת עם הפור שלוקח לו הרבה זמן לחשב
  const childNumber = React.useMemo(() => {
    let output = 0;
    for (let i = 0; i < 800_000_000; i++) {
      output++;
    }
    return output;
  }, []);

  // אם נכניס למשל לדפנדסי במערך
  //Math.random()
  //אז הוא יבצע מחדש כל לחיצה על המינוס את הפוקנציה המורכבת הזאת כי בעצם הרנדום מחזיר כל פעם ערך אחר ושומר בממורי ואז הוא בודק ורואה שהוא התחלף ולכן הפונקציה תחשב מחדש
  return (
    <div>
      <p>iam Child</p>
      <h1>{childNumber}</h1>
      {console.log("obj")}
    </div>
  );
};

export default React.memo(Child);
